{"ast":null,"code":"import { REACT_ELEMENT, REACT_TEXT } from './contants';\n/**\n * 为了更方便的进行虚拟DOM的对比，我们把虚拟DOM进行一下包装\n * 需要把字符串或者数字也变成一个对象\n */\n\nexport function wrapToVdom(element) {\n  return typeof element === 'string' || typeof element === 'number' ? {\n    $$typeof: REACT_ELEMENT,\n    type: REACT_TEXT,\n    props: {\n      contant: element\n    }\n  } : element;\n}","map":{"version":3,"sources":["/Users/aguan/Documents/learning/code/1.basic/src/utils.js"],"names":["REACT_ELEMENT","REACT_TEXT","wrapToVdom","element","$$typeof","type","props","contant"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,YAA1C;AAGA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,UAAT,CAAqBC,OAArB,EAA8B;AACjC,SAAO,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAP,KAAmB,QAAlD,GACP;AAACC,IAAAA,QAAQ,EAAEJ,aAAX;AAA0BK,IAAAA,IAAI,EAAEJ,UAAhC;AAA4CK,IAAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAEJ;AAAV;AAAnD,GADO,GACkEA,OADzE;AAEH","sourcesContent":["import { REACT_ELEMENT, REACT_TEXT } from './contants'\n\n\n/**\n * 为了更方便的进行虚拟DOM的对比，我们把虚拟DOM进行一下包装\n * 需要把字符串或者数字也变成一个对象\n */\n\nexport function wrapToVdom (element) {\n    return typeof element === 'string' || typeof element === 'number' ?\n    {$$typeof: REACT_ELEMENT, type: REACT_TEXT, props: {contant: element}} : element\n}"]},"metadata":{},"sourceType":"module"}